name: Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
  REGISTRY: ghcr.io
  
jobs:
  test-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build api
        run: (cd cherry-iac/openapi; chmod 777 ./build-core-api.sh;  ./build-core-api.sh)

      - name: Build with Maven
        run: mvn -B test --file pom.xml


  build-java-images:
    needs: [ test-java ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [cherry-core, cherry-outside, cherry-production]
    
    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'

    - name: Build api
      run: (cd cherry-iac/openapi; chmod 777 ./build-core-api.sh;  ./build-core-api.sh)

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Log in to the Container registry
      uses: docker/login-action@v3.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for ${{ matrix.app }}
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.app }}
      
    - name: Build and push Docker image for ${{ matrix.app }}
      uses: docker/build-push-action@v5.3.0
      with:
        context: ./${{ matrix.app }}
        file: ./${{ matrix.app }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  kube-java-update:
    needs: [ build-java-images ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [cherry-core, cherry-outside, cherry-production]

    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
           method: kubeconfig
           kubeconfig: ${{ secrets.KUBESECRET }}
           context: kubernetes-admin@kubernetes
          
      - name: Deploy ${{ matrix.app }}
        run: kubectl rollout restart deployment/${{ matrix.app }} -n cherry

  build-monitoring-images:
    needs: [ test-java ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [grafana, loki, tempo, prometheus]

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for ${{ matrix.app }}
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.app }}

      - name: Build and push Docker image for ${{ matrix.app }}
        uses: docker/build-push-action@v5.3.0
        with:
          context: ./cherry-iac/images/${{ matrix.app }}
          file: ./cherry-iac/images/${{ matrix.app }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  kube-monitoring-update:
    needs: [ build-monitoring-images ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [grafana, loki, tempo, prometheus]

    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBESECRET }}
          context: kubernetes-admin@kubernetes

      - name: Deploy ${{ matrix.app }}
        run: kubectl rollout restart deployment/${{ matrix.app }} -n cherry
